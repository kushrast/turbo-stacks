{"version":3,"sources":["Header.jsx","MainPageNavigation.jsx","api/Storage.js","InstaList.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Header","props","toggleIsMouseOverIcon","setState","isMouseOverIcon","state","getIconColor","class","href","icon","faLayerGroup","size","color","faGripHorizontal","this","onMouseEnter","onMouseLeave","React","Component","MainPageNavigation","style","marginTop","LocalStorageClient","getLocalStorage","Storage","window","localStorage","createNewInstaList","title","listItems","persist","storage","currentLists","listId","uuidv4","creationTimestampMs","Date","getTime","currentListsAsString","getItem","JSON","parse","setItem","stringify","getInstaList","localStorageClient","ListTitle","ref","defaultValue","value","onChange","updateTitle","numItems","onClick","saveList","faCheck","disabled","ListItem","getPlaceholder","newListItem","getDefaultValue","updateInputValue","inputElem","target","onSubmit","refs","input","blur","onEnter","index","onKeyDown","event","key","placeholder","type","onDelete","faTimesCircle","SortableListItem","sortableElement","sortIndex","SortableListContainer","sortableContainer","children","ListControls","isToggled","toggleList","marginLeft","togglePersist","BaseInstaList","showAll","items","length","onSortEnd","distance","map","item","i","addNewItem","fontStyle","InstaList","oldIndex","newIndex","arrayMoveImmutable","ignored","newValue","titleUpdateEvent","newListId","history","push","newItemsList","splice","updatedItemValue","savedListData","match","params","id","InstaListFormTemplate","withRouter","InstaListForm","App","className","path","InstaListRouter","exact","url","useRouteMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAiDeA,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,sBAAwB,WACtB,EAAKC,SAAS,CAACC,iBAAkB,EAAKC,MAAMD,mBAT3B,EAYnBE,aAAe,WACb,OAAI,EAAKD,MAAMD,gBACN,UAEF,WAbP,EAAKC,MAAQ,CACXD,iBAAiB,GAJF,E,0CAmBnB,WACE,OACE,8BACE,sBAAKG,MAAM,sBAAX,UACE,qBAAKA,MAAM,cAAX,SACE,oBAAGA,MAAM,cAAcC,KAAK,IAA5B,UACE,cAAC,IAAD,CAAiBC,KAAMC,IAAcC,KAAK,KAAKC,MAAM,YADvD,cAIF,qBAAKL,MAAM,mCAAX,SACE,4BACE,mBAAGC,KAAK,IAAR,SACE,cAAC,IAAD,CAAiBC,KAAMI,IAAkBF,KAAK,KAAKC,MAAOE,KAAKR,eAAgBS,aAAcD,KAAKZ,sBAAuBc,aAAcF,KAAKZ,8BAIlJ,qBAAKK,MAAM,2C,GApCAU,IAAMC,WC0CZC,E,kDA3Cb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDI,MAAQ,GAHI,E,0CAOnB,WACE,OACE,8BACE,qBAAKE,MAAM,sBAAsBa,MAAO,CAACC,UAAW,QAApD,SACE,qBAAKd,MAAM,sBAAX,SACE,qBAAKA,MAAM,cAAX,SACE,sBAAKA,MAAM,OAAX,UACE,yBAAQA,MAAM,cAAd,UACE,mBAAGA,MAAM,oBAAT,uBAGA,wBAAQA,MAAM,mBAAmB,aAAW,eAA5C,SACE,sBAAMA,MAAM,OAAZ,SACE,mBAAGA,MAAM,oBAAoB,cAAY,gBAI/C,qBAAKA,MAAM,eAAX,SACE,sBAAKA,MAAM,UAAX,UACE,8BACE,mBAAGA,MAAM,+BAA+BC,KAAK,sBAA7C,6BAEF,qBAAKY,MAAO,CAACC,UAAW,OAAxB,SACE,mBAAGd,MAAM,+BAAT,4C,GA/BWU,IAAMC,W,+CCKjCI,E,4MACLC,gBAAkB,WACjB,MAAwB,qBAAbC,QACFC,OAAOC,aAEP,M,EAIVC,mBAAqB,SAACC,EAAOC,EAAWC,GACvC,IAAIC,EAAU,EAAKR,kBACnB,GAAe,MAAXQ,EAAiB,CACpB,IAGIC,EAHAC,EAASC,cACTC,GAAsB,IAAIC,MAAOC,UAGjCC,EAAuBP,EAAQQ,QAAQ,SAY3C,OATCP,EAD2B,MAAxBM,EACY,GAEAE,KAAKC,MAAMH,IAGdL,GAAU,CAAC,MAASL,EAAO,MAASC,EAAW,oBAAuBM,EAAqB,QAAWL,GAEnHC,EAAQW,QAAQ,QAASF,KAAKG,UAAUX,IAEjCC,EAER,MAAO,I,EAGRW,aAAe,SAACX,GACf,IAAIF,EAAU,EAAKR,kBACnB,GAAe,MAAXQ,EAAiB,CACpB,IACIO,EAAuBP,EAAQQ,QAAQ,SAQ3C,OAN4B,MAAxBD,EACY,GAEAE,KAAKC,MAAMH,IAGPL,GAErB,MAAO,I,uBApDR,aAAc,oB,sDACd,SAAmBL,EAAOC,EAAWC,M,0BACrC,SAAaG,Q,MAsDVY,EAAqB,IAAIvB,EAEhBK,EAAqBkB,EAAmBlB,mBACxCiB,EAAeC,EAAmBD,aClDzCE,E,kDACJ,WAAY7C,GAAQ,uCACZA,G,0CAGR,WACE,OACI,qBAAKM,MAAM,kCAAX,SACE,sBAAKA,MAAM,+BAAX,UACE,uBAAOA,MAAM,mCAAmCwC,IAAI,QAAQC,aAAclC,KAAKb,MAAMgD,MAAOC,SAAUpC,KAAKb,MAAMkD,cACjH,mBAAG5C,MAAM,UAAT,SAEEO,KAAKb,MAAMmD,SAAW,EACtB,wBAAQ7C,MAAM,uCAAwC8C,QAASvC,KAAKb,MAAMqD,SAA1E,SACE,sBAAM/C,MAAM,OAAZ,SACE,cAAC,IAAD,CAAiBE,KAAM8C,IAAS5C,KAAK,WAIzC,wBAAQJ,MAAM,4BAA4BiD,UAAQ,EAAlD,SACE,sBAAMjD,MAAM,OAAZ,SACE,cAAC,IAAD,CAAiBE,KAAM8C,IAAS5C,KAAK,sB,GArB/BM,IAAMC,WAgCxBuC,E,kDACJ,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAORyD,eAAiB,WACf,OAAI,EAAKzD,MAAM0D,YACN,eAEF,iBAZU,EAenBC,gBAAkB,WAChB,OAAI,EAAK3D,MAAM0D,YACN,GAEF,EAAKtD,MAAM4C,OAnBD,EAsBnBW,gBAAkB,WAChB,OAAI,EAAK3D,MAAM0D,YACN,GAEF,EAAKtD,MAAM4C,OA1BD,EA6BnBY,iBAAmB,SAACC,GAClB,EAAK3D,SAAS,CAAC8C,MAAOa,EAAUC,OAAOd,SA9BtB,EAiCnBe,SAAW,WACT,EAAKC,KAAKC,MAAMC,OAChB,EAAKlE,MAAMmE,QAAQ,EAAKnE,MAAMoE,MAAO,EAAKhE,MAAM4C,OAC5C,EAAKhD,MAAM0D,aACb,EAAKxD,SAAS,CAAC8C,MAAO,MArCP,EAyCnBqB,UAAY,SAACC,GACK,UAAZA,EAAMC,KACR,EAAKR,YAxCP,EAAK3D,MAAQ,CACX4C,MAAO,EAAKhD,MAAMgD,OAJH,E,0CA+CnB,WAAU,IAAD,OACP,OACF,qBAAK1C,MAAM,sBAAX,SACE,qBAAKA,MAAM,cAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,yBAAX,SACE,qBAAKA,MAAM,UAAX,SACE,sBAAKA,MAAM,oCAAX,UACE,mBAAGA,MAAM,gCAAT,SACE,uBAAOA,MAAM,kCAAkCwC,IAAI,QAAQ0B,YAAa3D,KAAK4C,iBAAkBgB,KAAK,OAAOzB,MAAOnC,KAAKT,MAAM4C,MAAOC,SAAUpC,KAAK+C,iBAAkBS,UAAWxD,KAAKwD,cAErLxD,KAAKb,MAAM0D,YACX,sBACF,mBAAGpD,MAAM,UAAT,SACE,wBAAQA,MAAM,4BAA4B8C,QAAS,WAAO,EAAKpD,MAAM0E,SAAS,EAAK1E,MAAMoE,QAAzF,SACE,sBAAM9D,MAAM,OAAZ,SACE,cAAC,IAAD,CAAiBE,KAAMmE,IAAejE,KAAK,8B,GAhExCM,IAAMC,WA+EvB2D,EAAmBC,aAAgB,gBAAE7B,EAAF,EAAEA,MAAOmB,EAAT,EAASA,QAASW,EAAlB,EAAkBA,UAAWJ,EAA7B,EAA6BA,SAA7B,OACvC,oBAAIpE,MAAM,sBAAV,SACE,cAAC,EAAD,CAAU0C,MAAOA,EAAOmB,QAASA,EAASC,MAAOU,EAAWJ,SAAUA,SAIpEK,EAAwBC,aAAkB,YAAiB,IAAfC,EAAc,EAAdA,SAChD,OACE,6BAAKA,OAIHC,E,kDACJ,WAAYlF,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qBAAKM,MAAM,sBAAX,SACE,sBAAKA,MAAM,cAAX,UACGO,KAAKb,MAAMmF,UAGZ,wBAAQ7E,MAAM,iBAAiB8C,QAASvC,KAAKb,MAAMoF,WAAnD,sBAFA,wBAAQ9E,MAAM,0BAA0B8C,QAASvC,KAAKb,MAAMoF,WAA5D,oBAIF,wBAAQ9E,MAAQO,KAAKb,MAAM6B,QAAwC,6BAA9B,4BAA4DV,MAAO,CAACkE,WAAY,QAASjC,QAASvC,KAAKb,MAAMsF,cAAlJ,SACKzE,KAAKb,MAAM6B,QAEZ,6CADA,8D,GAhBeb,IAAMC,WA0B3BsE,E,kDACJ,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IAORoF,WAAa,WACX,EAAKlF,SAAS,CAACsF,SAAU,EAAKpF,MAAMoF,WANpC,EAAKpF,MAAQ,CACXoF,SAAS,GAJM,E,0CAYnB,WAAU,IAAD,OACP,OACE,gCACI,cAAC,EAAD,CAAWxC,MAAOnC,KAAKb,MAAM2B,MAAQwB,SAAUtC,KAAKb,MAAMyF,MAAMC,OAAQrC,SAAUxC,KAAKb,MAAMqD,SAAUH,YAAarC,KAAKb,MAAMkD,cAC/H,cAAC,EAAD,CAAckC,WAAYvE,KAAKuE,WAAYD,WAAYtE,KAAKT,MAAMoF,QAASF,cAAezE,KAAKb,MAAMsF,cAAezD,QAAShB,KAAKb,MAAM6B,UACxI,cAACkD,EAAD,CAAuBY,UAAW9E,KAAKb,MAAM2F,UAAWC,SAAU,EAAlE,SAEE/E,KAAKT,MAAMoF,QACV3E,KAAKb,MAAMyF,MAAMI,KAAI,SAACC,EAAMC,GAAP,OAClB,cAACnB,EAAD,CAEE5B,MAAO8C,EACP1B,MAAO2B,EACPjB,UAAWiB,EACXrB,SAAU,EAAK1E,MAAM0E,SACrBP,QAAS,EAAKnE,MAAMmE,SALf2B,MAOVjF,KAAKb,MAAMyF,MAAMC,OAAS,EACzB,cAACd,EAAD,CAEI5B,MAAOnC,KAAKb,MAAMyF,MAAM,GACxBrB,MAAO,EACPM,SAAU7D,KAAKb,MAAM0E,SACrBP,QAAStD,KAAKb,MAAMmE,SAJftD,KAAKb,MAAMyF,MAAM,IAM1B,0BAIF5E,KAAKT,MAAMoF,QACX,cAAC,EAAD,CAAU9B,aAAa,EAAMS,QAAStD,KAAKb,MAAMgG,aAEjD,8BAC8B,GAA3BnF,KAAKb,MAAMyF,MAAMC,OAChB,+BACE,qBAAKpF,MAAM,sBAAX,SACE,qBAAKA,MAAM,gCAAgCa,MAAO,CAAC8E,UAAU,SAAUtF,MAAO,QAA9E,kCAKJ,kC,GAtDYK,IAAMC,WA8D5BiF,E,kDACJ,WAAYlG,GAAQ,IAAD,uBACjB,cAAMA,IAWR2F,UAAY,YAA2B,IAAzBQ,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACtB,EAAKlG,UAAS,gBAAEuF,EAAF,EAAEA,MAAF,MAAc,CAC1BA,MAAOY,YAAmBZ,EAAOU,EAAUC,QAd5B,EAkBnBJ,WAAa,SAACM,EAASC,GACrB,EAAKrG,SAAS,CAACuF,MAAM,GAAD,mBAAM,EAAKrF,MAAMqF,OAAjB,CAAwBc,OAnB3B,EAsBnBrD,YAAc,SAACsD,GACb,EAAKtG,SAAS,CAACyB,MAAO6E,EAAiB1C,OAAOd,SAvB7B,EA0BnBK,SAAW,WACT,IAAIoD,EAAY/E,EAAmB,EAAKtB,MAAMuB,MAAO,EAAKvB,MAAMqF,OAEhE,EAAKzF,MAAM0G,QAAQC,KAAK,cAAgBF,IA7BvB,EAgCnB/B,SAAW,SAACN,GACV,IAAIwC,EAAe,EAAKxG,MAAMqF,MAC9BmB,EAAaC,OAAOzC,EAAO,GAC3B,EAAKlE,SAAS,CAACuF,MAAOmB,KAnCL,EAsCnBtB,cAAgB,WACd,EAAKpF,SAAS,CAAC2B,SAAU,EAAKzB,MAAMyB,WAvCnB,EA0CnBsC,QAAU,SAACC,EAAO0C,GAChB,GAAI,EAAK1G,MAAMqF,MAAMC,OAAStB,EAAO,CACnC,IAAIqB,EAAQ,EAAKrF,MAAMqF,MACvBA,EAAMrB,GAAS0C,EACf,EAAK5G,SAAS,CAACuF,MAAOA,MA3CxB,IAAIsB,EAAgBpE,EAAa3C,EAAMgH,MAAMC,OAAOC,IAHnC,OAKjB,EAAK9G,MAAQ,CACXyB,QAASkF,EAAclF,QACvB4D,MAAOsB,EAActB,MACrB9D,MAAOoF,EAAcpF,OARN,E,0CAkDnB,WACE,OACE,cAAC,EAAD,CAAeA,MAAOd,KAAKT,MAAMuB,MAAO8D,MAAO5E,KAAKT,MAAMqF,MAAOpC,SAAUxC,KAAKwC,SAAUH,YAAarC,KAAKqC,YAAakC,WAAYvE,KAAKuE,WAAYO,UAAW9E,KAAK8E,UAAWjB,SAAU7D,KAAK6D,SAAUsB,WAAYnF,KAAKmF,WAAYnE,QAAShB,KAAKT,MAAMyB,QAASyD,cAAezE,KAAKyE,cAAenB,QAAStD,KAAKsD,c,GArDnSnD,IAAMC,WA0DxBkG,E,kDACJ,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IASR2F,UAAY,YAA2B,IAAzBQ,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACtB,EAAKlG,UAAS,gBAAEuF,EAAF,EAAEA,MAAF,MAAc,CAC1BA,MAAOY,YAAmBZ,EAAOU,EAAUC,QAZ5B,EAgBnBJ,WAAa,SAACM,EAASC,GACrB,EAAKrG,SAAS,CAACuF,MAAM,GAAD,mBAAM,EAAKrF,MAAMqF,OAAjB,CAAwBc,OAjB3B,EAoBnBrD,YAAc,SAACsD,GACb,EAAKtG,SAAS,CAACyB,MAAO6E,EAAiB1C,OAAOd,SArB7B,EAwBnBK,SAAW,WACT,IAAIoD,EAAY/E,EAAmB,EAAKtB,MAAMuB,MAAO,EAAKvB,MAAMqF,MAAO,EAAKrF,MAAMyB,SAElF,EAAK7B,MAAM0G,QAAQC,KAAK,cAAgBF,IA3BvB,EA8BnB/B,SAAW,SAACN,GACV,IAAIwC,EAAe,EAAKxG,MAAMqF,MAC9BmB,EAAaC,OAAOzC,EAAO,GAC3B,EAAKlE,SAAS,CAACuF,MAAOmB,KAjCL,EAoCnBtB,cAAgB,WACd,EAAKpF,SAAS,CAAC2B,SAAU,EAAKzB,MAAMyB,WArCnB,EAwCnBsC,QAAU,SAACC,EAAO0C,GAChB,GAAI,EAAK1G,MAAMqF,MAAMC,OAAStB,EAAO,CACnC,IAAIqB,EAAQ,EAAKrF,MAAMqF,MACvBA,EAAMrB,GAAS0C,EACf,EAAK5G,SAAS,CAACuF,MAAOA,MAzCxB,EAAKrF,MAAQ,CACXyB,SAAS,EACT4D,MAAO,GACP9D,MAAO,aANQ,E,0CAgDnB,WACE,OACE,cAAC,EAAD,CAAeA,MAAOd,KAAKT,MAAMuB,MAAO8D,MAAO5E,KAAKT,MAAMqF,MAAOpC,SAAUxC,KAAKwC,SAAUH,YAAarC,KAAKqC,YAAakC,WAAYvE,KAAKuE,WAAYO,UAAW9E,KAAK8E,UAAWjB,SAAU7D,KAAK6D,SAAUsB,WAAYnF,KAAKmF,WAAanE,QAAShB,KAAKT,MAAMyB,QAASyD,cAAezE,KAAKyE,cAAenB,QAAStD,KAAKsD,c,GAnDxRnD,IAAMC,WAwD3BmG,cAAWlB,GACbmB,EAAgBD,YAAWD,G,0BClVzB,ICmBA,SAASG,IACtB,OACA,cAAC,IAAD,UACE,qBAAKC,UAAU,MAAf,SACE,yBAASjH,MAAM,UAAf,SACE,sBAAKA,MAAM,YAAX,UACE,cAAC,EAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,KAAK,aAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAlB,SACE,cAAC,EAAD,kBASd,SAASC,IACP,IAAME,EAAQC,cAARD,IACN,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAI,UAAKG,EAAL,aAAX,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOG,KAAI,UAAKG,EAAL,QAAX,SACE,cAAC,EAAD,SClDR,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4f495a9.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGripHorizontal, faLayerGroup } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMouseOverIcon: false\n    };\n  }\n\n  toggleIsMouseOverIcon = () => {\n    this.setState({isMouseOverIcon: !this.state.isMouseOverIcon});\n  }\n\n  getIconColor = () => {\n    if (this.state.isMouseOverIcon) {\n      return \"#D4EBD2\";\n    } \n    return \"#DDDDDD\";\n  }\n\n  render () {\n    return (\n      <div>\n        <div class=\"columns is-centered\">\n          <div class=\"column is-2\">\n            <a class=\"header-text\" href=\"/\">\n              <FontAwesomeIcon icon={faLayerGroup} size=\"2x\" color=\"#417dc1\"/> turbo\n            </a>\n          </div>\n          <div class=\"column is-auto has-text-centered\">\n            <p>\n              <a href=\"/\">\n                <FontAwesomeIcon icon={faGripHorizontal} size=\"5x\" color={this.getIconColor()} onMouseEnter={this.toggleIsMouseOverIcon} onMouseLeave={this.toggleIsMouseOverIcon}/>\n              </a>\n            </p>\n          </div>\n          <div class=\"column is-2 has-text-centered\">\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default Header;","import React from 'react';\n\n\nclass MainPageNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render () {\n    return (\n      <div>\n        <div class=\"columns is-centered\" style={{marginTop: \"35px\"}}>\n          <div class=\"column is-7 columns\">\n            <div class=\"column is-6\">\n              <div class=\"card\">\n                <header class=\"card-header\">\n                  <p class=\"card-header-title\">\n                    InstaList\n                  </p>\n                  <button class=\"card-header-icon\" aria-label=\"more options\">\n                    <span class=\"icon\">\n                      <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                  </button>\n                </header>\n                <div class=\"card-content\">\n                  <div class=\"content\">\n                    <div>\n                      <a class=\"button is-light is-fullwidth\" href=\"/instalist/new_list\">New InstaList</a>\n                    </div>\n                    <div style={{marginTop: \"8px\"}}>\n                      <a class=\"button is-light is-fullwidth\">View All</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default MainPageNavigation;","import { v4 as uuidv4 } from 'uuid';\n\nclass StorageClient {\n\tconstructor(){}\n\tcreateNewInstaList(title, listItems, persist){}\n\tgetInstaList(listId){}\n}\n\nclass LocalStorageClient extends StorageClient {\n\tgetLocalStorage = () => {\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t  return window.localStorage;\n\t\t} else {\n\t\t  return null;\n\t\t}\n\t}\n\n\tcreateNewInstaList = (title, listItems, persist) => {\n\t\tvar storage = this.getLocalStorage();\n\t\tif (storage != null) {\n\t\t\tvar listId = uuidv4();\n\t\t\tvar creationTimestampMs = new Date().getTime();\n\n\t\t\tvar currentLists;\n\t\t\tvar currentListsAsString = storage.getItem(\"lists\");\n\n\t\t\tif (currentListsAsString == null) {\n\t\t\t\tcurrentLists = {};\n\t\t\t} else {\n\t\t\t\tcurrentLists = JSON.parse(currentListsAsString);\n\t\t\t}\n\n\t\t\tcurrentLists[listId] = {\"title\": title, \"items\": listItems, \"creationTimestampMs\": creationTimestampMs, \"persist\": persist}\n\n\t\t\tstorage.setItem(\"lists\", JSON.stringify(currentLists));\n\n\t\t\treturn listId;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tgetInstaList = (listId) => {\n\t\tvar storage = this.getLocalStorage();\n\t\tif (storage != null) {\n\t\t\tvar currentLists;\n\t\t\tvar currentListsAsString = storage.getItem(\"lists\");\n\n\t\t\tif (currentListsAsString == null) {\n\t\t\t\tcurrentLists = {};\n\t\t\t} else {\n\t\t\t\tcurrentLists = JSON.parse(currentListsAsString);\n\t\t\t}\n\n\t\t\treturn currentLists[listId];\n\t\t}\n\t\treturn {};\n\t}\n}\n\nvar localStorageClient = new LocalStorageClient();\n\nexport const createNewInstaList = localStorageClient.createNewInstaList;\nexport const getInstaList = localStorageClient.getInstaList;","import FadeIn from 'react-fade-in';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {arrayMoveImmutable} from 'array-move';\nimport { withRouter } from \"react-router\";\n\nimport {createNewInstaList, getInstaList} from './api/Storage.js';\n\nimport React from 'react';\n\nclass ListTitle extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div class=\"list-header columns is-centered\">\n          <div class=\"column is-7 field is-grouped\">\n            <input class=\"input list-title-input underline\" ref=\"input\" defaultValue={this.props.value} onChange={this.props.updateTitle}/>\n            <p class=\"buttons\">\n            {\n              this.props.numItems > 0 ?\n              <button class=\"button is-success is-medium is-light\"  onClick={this.props.saveList}>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n              :\n              <button class=\"button is-medium is-light\" disabled>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n            }\n            </p>\n          </div>\n        </div>\n      );\n  }\n}\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value\n    }\n  }\n\n  getPlaceholder = () => {\n    if (this.props.newListItem) {\n      return \"Add new item\";\n    } \n    return \"Enter a value\";\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  updateInputValue = (inputElem) => {\n    this.setState({value: inputElem.target.value});\n  }\n\n  onSubmit = () => {\n    this.refs.input.blur();\n    this.props.onEnter(this.props.index, this.state.value);\n    if (this.props.newListItem) {\n      this.setState({value: \"\"});\n    }\n  }\n\n  onKeyDown = (event) => {\n    if (event.key===\"Enter\") {\n      this.onSubmit();\n    }\n  }\n\n  render() {\n    return (\n  <div class=\"columns is-centered\">\n    <div class=\"column is-7\">\n      <div class=\"card\">\n        <div class=\"card-content list-card\">\n          <div class=\"content\">\n            <div class=\"field is-grouped list-item-number\">\n              <p class=\"control list-item is-expanded\">\n                <input class=\"input list-item-input underline\" ref=\"input\" placeholder={this.getPlaceholder()} type=\"text\" value={this.state.value} onChange={this.updateInputValue} onKeyDown={this.onKeyDown}/>\n              </p>\n              { this.props.newListItem ?\n                <p></p> :\n              <p class=\"buttons\">\n                <button class=\"button is-ghost is-medium\" onClick={() => {this.props.onDelete(this.props.index)}}>\n                  <span class=\"icon\">\n                    <FontAwesomeIcon icon={faTimesCircle} size=\"xs\"/>\n                  </span>\n                </button>\n              </p>\n            }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n      );\n  }\n}\n\nconst SortableListItem = sortableElement(({value, onEnter, sortIndex, onDelete}) => (\n  <li class=\"list-item-container\">\n    <ListItem value={value} onEnter={onEnter} index={sortIndex} onDelete={onDelete}/>\n  </li>\n));\n\nconst SortableListContainer = sortableContainer(({children}) => {\n  return (\n    <ul>{children}</ul>\n  );\n});\n\nclass ListControls extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div class=\"columns is-centered\">\n        <div class=\"column is-7\">\n        { !this.props.isToggled ? \n          <button class=\"button is-info is-light\" onClick={this.props.toggleList}>Toggle</button>\n          :\n          <button class=\"button is-info\" onClick={this.props.toggleList}>Untoggle</button>\n        }\n        <button class={!this.props.persist ? \"button is-danger is-light\" : \"button is-primary is-light\"} style={{marginLeft: \"10px\"}} onClick={this.props.togglePersist}>\n          { !this.props.persist ? \n            <span> Don't persist </span> :\n            <span> Persist </span>\n          }\n        </button>\n        </div>\n      </div>\n      );\n  }\n}\n\nclass BaseInstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAll: true,\n    }\n  }\n\n  toggleList = () => {\n    this.setState({showAll: !this.state.showAll});\n  }\n\n  render() {\n    return (\n      <div>\n          <ListTitle value={this.props.title}  numItems={this.props.items.length} saveList={this.props.saveList} updateTitle={this.props.updateTitle} />\n          <ListControls toggleList={this.toggleList} isToggled={!this.state.showAll} togglePersist={this.props.togglePersist} persist={this.props.persist}/>\n          <SortableListContainer onSortEnd={this.props.onSortEnd} distance={1}>\n          {\n            this.state.showAll ?\n            (this.props.items.map((item, i) => (\n                <SortableListItem\n                  key={item}\n                  value={item}\n                  index={i}\n                  sortIndex={i}\n                  onDelete={this.props.onDelete}\n                  onEnter={this.props.onEnter}/>)))\n            :\n            (this.props.items.length > 0 ? \n              <SortableListItem\n                  key={this.props.items[0]}\n                  value={this.props.items[0]}\n                  index={0}\n                  onDelete={this.props.onDelete}\n                  onEnter={this.props.onEnter}/>\n              :\n              <div></div>)\n          }\n          </SortableListContainer>\n          {\n            this.state.showAll ? \n            <ListItem newListItem={true} onEnter={this.props.addNewItem}/>\n            :\n            <div>\n              {this.props.items.length == 0 ? \n                <span>\n                  <div class=\"columns is-centered\">\n                    <div class=\"column is-7 has-text-centered\" style={{fontStyle:\"italic\", color: \"grey\"}}>\n                      No items in list\n                    </div>\n                  </div>\n                </span>: \n                <span></span>}\n            </div>\n          }\n      </div>\n      );\n  }\n}\n\nclass InstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var savedListData = getInstaList(props.match.params.id);\n\n    this.state = {\n      persist: savedListData.persist,\n      items: savedListData.items,\n      title: savedListData.title\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (ignored, newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewInstaList(this.state.title, this.state.items);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  togglePersist = () => {\n    this.setState({persist: !this.state.persist});\n  }\n\n  onEnter = (index, updatedItemValue) => {\n    if (this.state.items.length > index) {\n      var items = this.state.items;\n      items[index] = updatedItemValue;\n      this.setState({items: items})\n    }\n  }\n\n  render() {\n    return (\n      <BaseInstaList title={this.state.title} items={this.state.items} saveList={this.saveList} updateTitle={this.updateTitle} toggleList={this.toggleList} onSortEnd={this.onSortEnd} onDelete={this.onDelete} addNewItem={this.addNewItem} persist={this.state.persist} togglePersist={this.togglePersist} onEnter={this.onEnter}/>\n      );\n  }\n}\n\nclass InstaListFormTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      persist: false,\n      items: [],\n      title: \"New Title\"\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (ignored, newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewInstaList(this.state.title, this.state.items, this.state.persist);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  togglePersist = () => {\n    this.setState({persist: !this.state.persist});\n  }\n\n  onEnter = (index, updatedItemValue) => {\n    if (this.state.items.length > index) {\n      var items = this.state.items;\n      items[index] = updatedItemValue;\n      this.setState({items: items})\n    }\n  }\n\n  render() {\n    return (\n      <BaseInstaList title={this.state.title} items={this.state.items} saveList={this.saveList} updateTitle={this.updateTitle} toggleList={this.toggleList} onSortEnd={this.onSortEnd} onDelete={this.onDelete} addNewItem={this.addNewItem}  persist={this.state.persist} togglePersist={this.togglePersist} onEnter={this.onEnter}/>\n      );\n  }\n}\n\nexport default withRouter(InstaList);\nexport const InstaListForm = withRouter(InstaListFormTemplate);\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Header from './Header.jsx';\nimport MainPageNavigation from './MainPageNavigation.jsx';\nimport InstaList, {InstaListForm} from './InstaList.jsx';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\nimport React from 'react';\nimport Typed from \"typed.js\";\n\nimport 'bulma/css/bulma.min.css';\nimport './App.css';\nimport logo from './logo.svg';\n\nexport default function App() {\n  return (\n  <Router>\n    <div className=\"App\">\n      <section class=\"section\">\n        <div class=\"container\">\n          <Header/>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/instalist\">\n              <InstaListRouter/>\n            </Route>\n            <Route exact path=\"/\">\n              <MainPageNavigation/>\n            </Route>\n          </Switch>\n        </div>\n      </section>\n    </div>\n  </Router>);\n}\n\nfunction InstaListRouter() {\n  let { url } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${url}/new_list`}>\n        <InstaListForm/>\n      </Route>\n      <Route path={`${url}/:id`}>\n        <InstaList/>\n      </Route>\n    </Switch>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}