{"ast":null,"code":"var _jsxFileName = \"/Users/kushrastogi/Projects/productivity/turbo-stacks/frontend/src/InstaList.jsx\";\nimport FadeIn from 'react-fade-in';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { withRouter } from \"react-router\";\nimport { createNewList } from './api/Storage.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTitle extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"list-header columns is-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-7 field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input list-title-input underline\",\n          ref: \"input\",\n          defaultValue: \"New List\",\n          onChange: this.props.updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"buttons\",\n          children: this.props.numItems > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button is-success is-medium is-light\",\n            onClick: this.props.saveList,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button is-medium is-light\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPlaceholder = () => {\n      if (this.props.newListItem) {\n        return \"Add new item\";\n      }\n\n      return \"Enter a value\";\n    };\n\n    this.getDefaultValue = () => {\n      if (this.props.newListItem) {\n        return \"\";\n      }\n\n      return this.state.value;\n    };\n\n    this.getDefaultValue = () => {\n      if (this.props.newListItem) {\n        return \"\";\n      }\n\n      return this.state.value;\n    };\n\n    this.updateInputValue = inputElem => {\n      this.setState({\n        value: inputElem.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.refs.input.blur();\n      this.props.onEnter(this.state.value);\n\n      if (this.props.newListItem) {\n        this.setState({\n          value: \"\"\n        });\n      }\n    };\n\n    this.onKeyDown = event => {\n      if (event.key === \"Enter\") {\n        this.onSubmit();\n      }\n    };\n\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns is-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-content list-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"field is-grouped list-item-number\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"control list-item is-expanded\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"input list-item-input underline\",\n                    ref: \"input\",\n                    placeholder: this.getPlaceholder(),\n                    type: \"text\",\n                    value: this.state.value,\n                    onChange: this.updateInputValue,\n                    onKeyDown: this.onKeyDown\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), this.props.newListItem ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"buttons\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"button is-ghost is-medium\",\n                    onClick: () => {\n                      this.props.onDelete(this.props.index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"icon\",\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faTimesCircle,\n                        size: \"xs\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst SortableListItem = sortableElement(_c = ({\n  value,\n  onEnter,\n  index,\n  onDelete\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  class: \"list-item-container\",\n  children: /*#__PURE__*/_jsxDEV(ListItem, {\n    value: value,\n    onEnter: onEnter,\n    index: index,\n    onDelete: onDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 3\n}, this));\n_c2 = SortableListItem;\nconst SortableListContainer = sortableContainer(_c3 = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n});\n_c4 = SortableListContainer;\n\nclass InstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        items\n      }) => ({\n        items: arrayMoveImmutable(items, oldIndex, newIndex)\n      }));\n    };\n\n    this.addNewItem = newValue => {\n      this.setState({\n        items: [...this.state.items, newValue]\n      });\n    };\n\n    this.updateTitle = titleUpdateEvent => {\n      this.setState({\n        title: titleUpdateEvent.target.value\n      });\n    };\n\n    this.saveList = () => {\n      var newListId = createNewList(this.state.title, this.state.items);\n      this.props.history.push(\"/instalist/\" + newListId);\n    };\n\n    this.onDelete = index => {\n      var newItemsList = this.state.items;\n      newItemsList.splice(index, 1);\n      this.setState({\n        items: newItemsList\n      });\n    };\n\n    this.state = {\n      items: [],\n      title: \"New Title\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n        numItems: this.state.items.length,\n        saveList: this.saveList,\n        updateTitle: this.updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortableListContainer, {\n        onSortEnd: this.onSortEnd,\n        distance: 1,\n        children: this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(SortableListItem, {\n          value: item,\n          index: i,\n          onEnter: a => {\n            console.log(a);\n          },\n          onDelete: this.onDelete\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        newListItem: true,\n        onEnter: this.addNewItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InstaListFormTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        items\n      }) => ({\n        items: arrayMoveImmutable(items, oldIndex, newIndex)\n      }));\n    };\n\n    this.addNewItem = newValue => {\n      this.setState({\n        items: [...this.state.items, newValue]\n      });\n    };\n\n    this.updateTitle = titleUpdateEvent => {\n      this.setState({\n        title: titleUpdateEvent.target.value\n      });\n    };\n\n    this.saveList = () => {\n      var newListId = createNewList(this.state.title, this.state.items);\n      this.props.history.push(\"/instalist/\" + newListId);\n    };\n\n    this.onDelete = index => {\n      var newItemsList = this.state.items;\n      newItemsList.splice(index, 1);\n      this.setState({\n        items: newItemsList\n      });\n    };\n\n    this.state = {\n      items: [],\n      title: \"New Title\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n        numItems: this.state.items.length,\n        saveList: this.saveList,\n        updateTitle: this.updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortableListContainer, {\n        onSortEnd: this.onSortEnd,\n        distance: 1,\n        children: this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(SortableListItem, {\n          value: item,\n          index: i,\n          onEnter: a => {\n            console.log(a);\n          },\n          onDelete: this.onDelete\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        newListItem: true,\n        onEnter: this.addNewItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c5 = withRouter(InstaList);\nexport const InstaListForm = withRouter(InstaListFormTemplate);\n_c6 = InstaListForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SortableListItem$sortableElement\");\n$RefreshReg$(_c2, \"SortableListItem\");\n$RefreshReg$(_c3, \"SortableListContainer$sortableContainer\");\n$RefreshReg$(_c4, \"SortableListContainer\");\n$RefreshReg$(_c5, \"%default%\");\n$RefreshReg$(_c6, \"InstaListForm\");","map":{"version":3,"sources":["/Users/kushrastogi/Projects/productivity/turbo-stacks/frontend/src/InstaList.jsx"],"names":["FadeIn","FontAwesomeIcon","faCheck","faTrash","faTimesCircle","sortableContainer","sortableElement","arrayMoveImmutable","withRouter","createNewList","React","ListTitle","Component","constructor","props","render","updateTitle","numItems","saveList","ListItem","getPlaceholder","newListItem","getDefaultValue","state","value","updateInputValue","inputElem","setState","target","onSubmit","refs","input","blur","onEnter","onKeyDown","event","key","onDelete","index","SortableListItem","SortableListContainer","children","InstaList","onSortEnd","oldIndex","newIndex","items","addNewItem","newValue","titleUpdateEvent","title","newListId","history","push","newItemsList","splice","length","map","item","i","a","console","log","InstaListFormTemplate","InstaListForm"],"mappings":"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","sourcesContent":["import FadeIn from 'react-fade-in';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {arrayMoveImmutable} from 'array-move';\nimport { withRouter } from \"react-router\";\n\nimport {createNewList} from './api/Storage.js';\n\nimport React from 'react';\n\nclass ListTitle extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div class=\"list-header columns is-centered\">\n          <div class=\"column is-7 field is-grouped\">\n            <input class=\"input list-title-input underline\" ref=\"input\" defaultValue=\"New List\" onChange={this.props.updateTitle}/>\n            <p class=\"buttons\">\n            {\n              this.props.numItems > 0 ?\n              <button class=\"button is-success is-medium is-light\"  onClick={this.props.saveList}>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n              :\n              <button class=\"button is-medium is-light\" disabled>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n            }\n            </p>\n          </div>\n        </div>\n      );\n  }\n}\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value\n    }\n  }\n\n  getPlaceholder = () => {\n    if (this.props.newListItem) {\n      return \"Add new item\";\n    } \n    return \"Enter a value\";\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  updateInputValue = (inputElem) => {\n    this.setState({value: inputElem.target.value});\n  }\n\n  onSubmit = () => {\n    this.refs.input.blur();\n    this.props.onEnter(this.state.value);\n    if (this.props.newListItem) {\n      this.setState({value: \"\"});\n    }\n  }\n\n  onKeyDown = (event) => {\n    if (event.key===\"Enter\") {\n      this.onSubmit();\n    }\n  }\n\n  render() {\n    return (\n        <div class=\"columns is-centered\">\n          <div class=\"column is-6\">\n            <div class=\"card\">\n              <div class=\"card-content list-card\">\n                <div class=\"content\">\n                  <div class=\"field is-grouped list-item-number\">\n                    <p class=\"control list-item is-expanded\">\n                      <input class=\"input list-item-input underline\" ref=\"input\" placeholder={this.getPlaceholder()} type=\"text\" value={this.state.value} onChange={this.updateInputValue} onKeyDown={this.onKeyDown}/>\n                    </p>\n                    { this.props.newListItem ?\n                      <p></p> :\n                    <p class=\"buttons\">\n                      <button class=\"button is-ghost is-medium\" onClick={() => {this.props.onDelete(this.props.index)}}>\n                        <span class=\"icon\">\n                          <FontAwesomeIcon icon={faTimesCircle} size=\"xs\"/>\n                        </span>\n                      </button>\n                    </p>\n                  }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nconst SortableListItem = sortableElement(({value, onEnter, index, onDelete}) => (\n  <li class=\"list-item-container\">\n    <ListItem value={value} onEnter={onEnter} index={index} onDelete={onDelete}/>\n  </li>\n));\n\nconst SortableListContainer = sortableContainer(({children}) => {\n  return <ul>{children}</ul>;\n});\n\nclass InstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      title: \"New Title\"\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewList(this.state.title, this.state.items);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  render() {\n    return (\n      <div>\n          <ListTitle numItems={this.state.items.length} saveList={this.saveList} updateTitle={this.updateTitle} />\n          <SortableListContainer onSortEnd={this.onSortEnd} distance={1}>\n          {this.state.items.map((item, i) => (\n              <SortableListItem\n                key={item}\n                value={item}\n                index={i}\n                onEnter={(a)=>{console.log(a)}}\n                onDelete={this.onDelete}/>))}\n          </SortableListContainer>\n          <ListItem newListItem={true} onEnter={this.addNewItem}/>\n      </div>\n      );\n  }\n}\n\nclass InstaListFormTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      title: \"New Title\"\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewList(this.state.title, this.state.items);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  render() {\n    return (\n      <div>\n          <ListTitle numItems={this.state.items.length} saveList={this.saveList} updateTitle={this.updateTitle} />\n          <SortableListContainer onSortEnd={this.onSortEnd} distance={1}>\n          {this.state.items.map((item, i) => (\n              <SortableListItem\n                key={item}\n                value={item}\n                index={i}\n                onEnter={(a)=>{console.log(a)}}\n                onDelete={this.onDelete}/>))}\n          </SortableListContainer>\n          <ListItem newListItem={true} onEnter={this.addNewItem}/>\n      </div>\n      );\n  }\n}\n\nexport default withRouter(InstaList);\nexport const InstaListForm = withRouter(InstaListFormTemplate);\n"]},"metadata":{},"sourceType":"module"}