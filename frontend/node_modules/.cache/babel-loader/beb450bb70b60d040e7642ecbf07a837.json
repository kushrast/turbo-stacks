{"ast":null,"code":"var _jsxFileName = \"/Users/kushrastogi/Projects/productivity/turbo-stacks/frontend/src/InstaList.jsx\";\nimport FadeIn from 'react-fade-in';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { withRouter } from \"react-router\";\nimport { createNewInstaList, getInstaList } from './api/Storage.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTitle extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"list-header columns is-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-7 field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input list-title-input underline\",\n          ref: \"input\",\n          defaultValue: this.props.value,\n          onChange: this.props.updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"buttons\",\n          children: this.props.numItems > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button is-success is-medium is-light\",\n            onClick: this.props.saveList,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button is-medium is-light\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPlaceholder = () => {\n      if (this.props.newListItem) {\n        return \"Add new item\";\n      }\n\n      return \"Enter a value\";\n    };\n\n    this.getDefaultValue = () => {\n      if (this.props.newListItem) {\n        return \"\";\n      }\n\n      return this.state.value;\n    };\n\n    this.getDefaultValue = () => {\n      if (this.props.newListItem) {\n        return \"\";\n      }\n\n      return this.state.value;\n    };\n\n    this.updateInputValue = inputElem => {\n      this.setState({\n        value: inputElem.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.refs.input.blur();\n      this.props.onEnter(this.props.index, this.state.value);\n\n      if (this.props.newListItem) {\n        this.setState({\n          value: \"\"\n        });\n      }\n    };\n\n    this.onKeyDown = event => {\n      if (event.key === \"Enter\") {\n        this.onSubmit();\n      }\n    };\n\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns is-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-content list-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"field is-grouped list-item-number\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"control list-item is-expanded\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"input list-item-input underline\",\n                    ref: \"input\",\n                    placeholder: this.getPlaceholder(),\n                    type: \"text\",\n                    value: this.state.value,\n                    onChange: this.updateInputValue,\n                    onKeyDown: this.onKeyDown\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 15\n                }, this), this.props.newListItem ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"buttons\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"button is-ghost is-medium\",\n                    onClick: () => {\n                      this.props.onDelete(this.props.index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"icon\",\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faTimesCircle,\n                        size: \"xs\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nconst SortableListItem = sortableElement(_c = ({\n  value,\n  onEnter,\n  sortIndex,\n  onDelete\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  class: \"list-item-container\",\n  children: /*#__PURE__*/_jsxDEV(ListItem, {\n    value: value,\n    onEnter: onEnter,\n    index: sortIndex,\n    onDelete: onDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 3\n}, this));\n_c2 = SortableListItem;\nconst SortableListContainer = sortableContainer(_c3 = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n});\n_c4 = SortableListContainer;\n\nclass ListControls extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns is-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-7\",\n        children: [!this.props.isToggled ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button is-info is-light\",\n          onClick: this.props.toggleList,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button is-info\",\n          onClick: this.props.toggleList,\n          children: \"Untoggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: !this.props.persist ? \"button is-danger is-light\" : \"button is-primary is-light\",\n          style: {\n            marginLeft: \"10px\"\n          },\n          onClick: this.props.togglePersist,\n          children: !this.props.persist ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Don't persist \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Persist \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BaseInstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleList = () => {\n      this.setState({\n        showAll: !this.state.showAll\n      });\n    };\n\n    this.state = {\n      showAll: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n        value: this.props.title,\n        numItems: this.props.items.length,\n        saveList: this.props.saveList,\n        updateTitle: this.props.updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListControls, {\n        toggleList: this.toggleList,\n        isToggled: !this.state.showAll,\n        togglePersist: this.props.togglePersist,\n        persist: this.props.persist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortableListContainer, {\n        onSortEnd: this.props.onSortEnd,\n        distance: 1,\n        children: this.state.showAll ? this.props.items.map((item, i) => /*#__PURE__*/_jsxDEV(SortableListItem, {\n          value: item,\n          index: i,\n          sortIndex: i,\n          onDelete: this.props.onDelete,\n          onEnter: this.props.onEnter\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)) : this.props.items.length > 0 ? /*#__PURE__*/_jsxDEV(SortableListItem, {\n          value: this.props.items[0],\n          index: 0,\n          onDelete: this.props.onDelete,\n          onEnter: this.props.onEnter\n        }, this.props.items[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), this.state.showAll ? /*#__PURE__*/_jsxDEV(ListItem, {\n        newListItem: true,\n        onEnter: this.props.addNewItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.items.length == 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"columns is-centered\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"column is-7 has-text-centered\",\n              style: {\n                fontStyle: \"italic\",\n                color: \"grey\"\n              },\n              children: \"No items in list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        items\n      }) => ({\n        items: arrayMoveImmutable(items, oldIndex, newIndex)\n      }));\n    };\n\n    this.addNewItem = (ignored, newValue) => {\n      this.setState({\n        items: [...this.state.items, newValue]\n      });\n    };\n\n    this.updateTitle = titleUpdateEvent => {\n      this.setState({\n        title: titleUpdateEvent.target.value\n      });\n    };\n\n    this.saveList = () => {\n      var newListId = createNewInstaList(this.state.title, this.state.items);\n      this.props.history.push(\"/instalist/\" + newListId);\n    };\n\n    this.onDelete = index => {\n      var newItemsList = this.state.items;\n      newItemsList.splice(index, 1);\n      this.setState({\n        items: newItemsList\n      });\n    };\n\n    this.togglePersist = () => {\n      this.setState({\n        persist: !this.state.persist\n      });\n    };\n\n    this.onEnter = (index, updatedItemValue) => {\n      if (this.state.items.length > index) {\n        var items = this.state.items;\n        items[index] = updatedItemValue;\n        this.setState({\n          items: items\n        });\n      }\n    };\n\n    var savedListData = getInstaList(props.match.params.id);\n    this.state = {\n      persist: savedListData.persist,\n      items: savedListData.items,\n      title: savedListData.title\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BaseInstaList, {\n      title: this.state.title,\n      items: this.state.items,\n      saveList: this.saveList,\n      updateTitle: this.updateTitle,\n      toggleList: this.toggleList,\n      onSortEnd: this.onSortEnd,\n      onDelete: this.onDelete,\n      addNewItem: this.addNewItem,\n      persist: this.state.persist,\n      togglePersist: this.togglePersist,\n      onEnter: this.onEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InstaListFormTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        items\n      }) => ({\n        items: arrayMoveImmutable(items, oldIndex, newIndex)\n      }));\n    };\n\n    this.addNewItem = (ignored, newValue) => {\n      this.setState({\n        items: [...this.state.items, newValue]\n      });\n    };\n\n    this.updateTitle = titleUpdateEvent => {\n      this.setState({\n        title: titleUpdateEvent.target.value\n      });\n    };\n\n    this.saveList = () => {\n      var newListId = createNewInstaList(this.state.title, this.state.items, this.state.persist);\n      this.props.history.push(\"/instalist/\" + newListId);\n    };\n\n    this.onDelete = index => {\n      var newItemsList = this.state.items;\n      newItemsList.splice(index, 1);\n      this.setState({\n        items: newItemsList\n      });\n    };\n\n    this.togglePersist = () => {\n      this.setState({\n        persist: !this.state.persist\n      });\n    };\n\n    this.onEnter = (index, updatedItemValue) => {\n      console.log(updatedItemValue);\n\n      if (this.state.items.length > index) {\n        var items = this.state.items;\n        items[index] = updatedItemValue;\n        this.setState({\n          items: items\n        });\n      }\n    };\n\n    this.state = {\n      persist: false,\n      items: [],\n      title: \"New Title\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BaseInstaList, {\n      title: this.state.title,\n      items: this.state.items,\n      saveList: this.saveList,\n      updateTitle: this.updateTitle,\n      toggleList: this.toggleList,\n      onSortEnd: this.onSortEnd,\n      onDelete: this.onDelete,\n      addNewItem: this.addNewItem,\n      persist: this.state.persist,\n      togglePersist: this.togglePersist,\n      onEnter: this.onEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c5 = withRouter(InstaList);\nexport const InstaListForm = withRouter(InstaListFormTemplate);\n_c6 = InstaListForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SortableListItem$sortableElement\");\n$RefreshReg$(_c2, \"SortableListItem\");\n$RefreshReg$(_c3, \"SortableListContainer$sortableContainer\");\n$RefreshReg$(_c4, \"SortableListContainer\");\n$RefreshReg$(_c5, \"%default%\");\n$RefreshReg$(_c6, \"InstaListForm\");","map":{"version":3,"sources":["/Users/kushrastogi/Projects/productivity/turbo-stacks/frontend/src/InstaList.jsx"],"names":["FadeIn","FontAwesomeIcon","faCheck","faTrash","faTimesCircle","sortableContainer","sortableElement","arrayMoveImmutable","withRouter","createNewInstaList","getInstaList","React","ListTitle","Component","constructor","props","render","value","updateTitle","numItems","saveList","ListItem","getPlaceholder","newListItem","getDefaultValue","state","updateInputValue","inputElem","setState","target","onSubmit","refs","input","blur","onEnter","index","onKeyDown","event","key","onDelete","SortableListItem","sortIndex","SortableListContainer","children","ListControls","isToggled","toggleList","persist","marginLeft","togglePersist","BaseInstaList","showAll","title","items","length","onSortEnd","map","item","i","addNewItem","fontStyle","color","InstaList","oldIndex","newIndex","ignored","newValue","titleUpdateEvent","newListId","history","push","newItemsList","splice","updatedItemValue","savedListData","match","params","id","InstaListFormTemplate","console","log","InstaListForm"],"mappings":"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","sourcesContent":["import FadeIn from 'react-fade-in';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {arrayMoveImmutable} from 'array-move';\nimport { withRouter } from \"react-router\";\n\nimport {createNewInstaList, getInstaList} from './api/Storage.js';\n\nimport React from 'react';\n\nclass ListTitle extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div class=\"list-header columns is-centered\">\n          <div class=\"column is-7 field is-grouped\">\n            <input class=\"input list-title-input underline\" ref=\"input\" defaultValue={this.props.value} onChange={this.props.updateTitle}/>\n            <p class=\"buttons\">\n            {\n              this.props.numItems > 0 ?\n              <button class=\"button is-success is-medium is-light\"  onClick={this.props.saveList}>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n              :\n              <button class=\"button is-medium is-light\" disabled>\n                <span class=\"icon\">\n                  <FontAwesomeIcon icon={faCheck} size=\"xs\"/>\n                </span>\n              </button>\n            }\n            </p>\n          </div>\n        </div>\n      );\n  }\n}\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value\n    }\n  }\n\n  getPlaceholder = () => {\n    if (this.props.newListItem) {\n      return \"Add new item\";\n    } \n    return \"Enter a value\";\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  getDefaultValue = () => {\n    if (this.props.newListItem) {\n      return \"\";\n    } \n    return this.state.value;\n  }\n\n  updateInputValue = (inputElem) => {\n    this.setState({value: inputElem.target.value});\n  }\n\n  onSubmit = () => {\n    this.refs.input.blur();\n    this.props.onEnter(this.props.index, this.state.value);\n    if (this.props.newListItem) {\n      this.setState({value: \"\"});\n    }\n  }\n\n  onKeyDown = (event) => {\n    if (event.key===\"Enter\") {\n      this.onSubmit();\n    }\n  }\n\n  render() {\n    return (\n  <div class=\"columns is-centered\">\n    <div class=\"column is-7\">\n      <div class=\"card\">\n        <div class=\"card-content list-card\">\n          <div class=\"content\">\n            <div class=\"field is-grouped list-item-number\">\n              <p class=\"control list-item is-expanded\">\n                <input class=\"input list-item-input underline\" ref=\"input\" placeholder={this.getPlaceholder()} type=\"text\" value={this.state.value} onChange={this.updateInputValue} onKeyDown={this.onKeyDown}/>\n              </p>\n              { this.props.newListItem ?\n                <p></p> :\n              <p class=\"buttons\">\n                <button class=\"button is-ghost is-medium\" onClick={() => {this.props.onDelete(this.props.index)}}>\n                  <span class=\"icon\">\n                    <FontAwesomeIcon icon={faTimesCircle} size=\"xs\"/>\n                  </span>\n                </button>\n              </p>\n            }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n      );\n  }\n}\n\nconst SortableListItem = sortableElement(({value, onEnter, sortIndex, onDelete}) => (\n  <li class=\"list-item-container\">\n    <ListItem value={value} onEnter={onEnter} index={sortIndex} onDelete={onDelete}/>\n  </li>\n));\n\nconst SortableListContainer = sortableContainer(({children}) => {\n  return (\n    <ul>{children}</ul>\n  );\n});\n\nclass ListControls extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div class=\"columns is-centered\">\n        <div class=\"column is-7\">\n        { !this.props.isToggled ? \n          <button class=\"button is-info is-light\" onClick={this.props.toggleList}>Toggle</button>\n          :\n          <button class=\"button is-info\" onClick={this.props.toggleList}>Untoggle</button>\n        }\n        <button class={!this.props.persist ? \"button is-danger is-light\" : \"button is-primary is-light\"} style={{marginLeft: \"10px\"}} onClick={this.props.togglePersist}>\n          { !this.props.persist ? \n            <span> Don't persist </span> :\n            <span> Persist </span>\n          }\n        </button>\n        </div>\n      </div>\n      );\n  }\n}\n\nclass BaseInstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAll: true,\n    }\n  }\n\n  toggleList = () => {\n    this.setState({showAll: !this.state.showAll});\n  }\n\n  render() {\n    return (\n      <div>\n          <ListTitle value={this.props.title}  numItems={this.props.items.length} saveList={this.props.saveList} updateTitle={this.props.updateTitle} />\n          <ListControls toggleList={this.toggleList} isToggled={!this.state.showAll} togglePersist={this.props.togglePersist} persist={this.props.persist}/>\n          <SortableListContainer onSortEnd={this.props.onSortEnd} distance={1}>\n          {\n            this.state.showAll ?\n            (this.props.items.map((item, i) => (\n                <SortableListItem\n                  key={item}\n                  value={item}\n                  index={i}\n                  sortIndex={i}\n                  onDelete={this.props.onDelete}\n                  onEnter={this.props.onEnter}/>)))\n            :\n            (this.props.items.length > 0 ? \n              <SortableListItem\n                  key={this.props.items[0]}\n                  value={this.props.items[0]}\n                  index={0}\n                  onDelete={this.props.onDelete}\n                  onEnter={this.props.onEnter}/>\n              :\n              <div></div>)\n          }\n          </SortableListContainer>\n          {\n            this.state.showAll ? \n            <ListItem newListItem={true} onEnter={this.props.addNewItem}/>\n            :\n            <div>\n              {this.props.items.length == 0 ? \n                <span>\n                  <div class=\"columns is-centered\">\n                    <div class=\"column is-7 has-text-centered\" style={{fontStyle:\"italic\", color: \"grey\"}}>\n                      No items in list\n                    </div>\n                  </div>\n                </span>: \n                <span></span>}\n            </div>\n          }\n      </div>\n      );\n  }\n}\n\nclass InstaList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var savedListData = getInstaList(props.match.params.id);\n\n    this.state = {\n      persist: savedListData.persist,\n      items: savedListData.items,\n      title: savedListData.title\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (ignored, newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewInstaList(this.state.title, this.state.items);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  togglePersist = () => {\n    this.setState({persist: !this.state.persist});\n  }\n\n  onEnter = (index, updatedItemValue) => {\n    if (this.state.items.length > index) {\n      var items = this.state.items;\n      items[index] = updatedItemValue;\n      this.setState({items: items})\n    }\n  }\n\n  render() {\n    return (\n      <BaseInstaList title={this.state.title} items={this.state.items} saveList={this.saveList} updateTitle={this.updateTitle} toggleList={this.toggleList} onSortEnd={this.onSortEnd} onDelete={this.onDelete} addNewItem={this.addNewItem} persist={this.state.persist} togglePersist={this.togglePersist} onEnter={this.onEnter}/>\n      );\n  }\n}\n\nclass InstaListFormTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      persist: false,\n      items: [],\n      title: \"New Title\"\n    }\n  }\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState(({items}) => ({\n      items: arrayMoveImmutable(items, oldIndex, newIndex),\n    }));\n  };\n\n  addNewItem = (ignored, newValue) => {\n    this.setState({items: [...this.state.items, newValue]});\n  }\n\n  updateTitle = (titleUpdateEvent) => {\n    this.setState({title: titleUpdateEvent.target.value});\n  }\n\n  saveList = () => {\n    var newListId = createNewInstaList(this.state.title, this.state.items, this.state.persist);\n\n    this.props.history.push(\"/instalist/\" + newListId);\n  }\n\n  onDelete = (index) => {\n    var newItemsList = this.state.items;\n    newItemsList.splice(index, 1);\n    this.setState({items: newItemsList});\n  }\n\n  togglePersist = () => {\n    this.setState({persist: !this.state.persist});\n  }\n\n  onEnter = (index, updatedItemValue) => {\n    console.log(updatedItemValue);\n    if (this.state.items.length > index) {\n      var items = this.state.items;\n      items[index] = updatedItemValue;\n      this.setState({items: items})\n    }\n  }\n\n  render() {\n    return (\n      <BaseInstaList title={this.state.title} items={this.state.items} saveList={this.saveList} updateTitle={this.updateTitle} toggleList={this.toggleList} onSortEnd={this.onSortEnd} onDelete={this.onDelete} addNewItem={this.addNewItem}  persist={this.state.persist} togglePersist={this.togglePersist} onEnter={this.onEnter}/>\n      );\n  }\n}\n\nexport default withRouter(InstaList);\nexport const InstaListForm = withRouter(InstaListFormTemplate);\n"]},"metadata":{},"sourceType":"module"}